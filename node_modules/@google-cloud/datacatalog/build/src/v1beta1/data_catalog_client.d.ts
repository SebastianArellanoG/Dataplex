/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Data Catalog API service allows clients to discover, understand, and manage
 *  their data.
 * @class
 * @memberof v1beta1
 */
export declare class DataCatalogClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    private _universeDomain;
    private _servicePath;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    dataCatalogStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of DataCatalogClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new DataCatalogClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    get apiEndpoint(): string;
    get universeDomain(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * A maximum of 10,000 entry groups may be created per organization across all
     * locations.
     *
     * Users should enable the Data Catalog API in the project identified by
     * the `parent` parameter (see [Data Catalog Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the project this entry group is in. Example:
     *
     *   * projects/{project_id}/locations/{location}
     *
     *   Note that this EntryGroup and its child resources may not actually be
     *   stored in the location in this name.
     * @param {string} request.entryGroupId
     *   Required. The id of the entry group to create.
     *   The id must begin with a letter or underscore, contain only English
     *   letters, numbers and underscores, and be at most 64 characters.
     * @param {google.cloud.datacatalog.v1beta1.EntryGroup} request.entryGroup
     *   The entry group to create. Defaults to an empty entry group.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.EntryGroup|EntryGroup}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.create_entry_group.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_CreateEntryGroup_async
     */
    createEntryGroup(request?: protos.google.cloud.datacatalog.v1beta1.ICreateEntryGroupRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.IEntryGroup,
        (protos.google.cloud.datacatalog.v1beta1.ICreateEntryGroupRequest | undefined),
        {} | undefined
    ]>;
    createEntryGroup(request: protos.google.cloud.datacatalog.v1beta1.ICreateEntryGroupRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntryGroup, protos.google.cloud.datacatalog.v1beta1.ICreateEntryGroupRequest | null | undefined, {} | null | undefined>): void;
    createEntryGroup(request: protos.google.cloud.datacatalog.v1beta1.ICreateEntryGroupRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntryGroup, protos.google.cloud.datacatalog.v1beta1.ICreateEntryGroupRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates an EntryGroup. The user should enable the Data Catalog API in the
     * project identified by the `entry_group.name` parameter (see [Data Catalog
     * Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.datacatalog.v1beta1.EntryGroup} request.entryGroup
     *   Required. The updated entry group. "name" field must be set.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Names of fields whose values to overwrite on an entry group.
     *
     *   If this parameter is absent or empty, all modifiable fields
     *   are overwritten. If such fields are non-required and omitted in the
     *   request body, their values are emptied.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.EntryGroup|EntryGroup}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.update_entry_group.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_UpdateEntryGroup_async
     */
    updateEntryGroup(request?: protos.google.cloud.datacatalog.v1beta1.IUpdateEntryGroupRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.IEntryGroup,
        (protos.google.cloud.datacatalog.v1beta1.IUpdateEntryGroupRequest | undefined),
        {} | undefined
    ]>;
    updateEntryGroup(request: protos.google.cloud.datacatalog.v1beta1.IUpdateEntryGroupRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntryGroup, protos.google.cloud.datacatalog.v1beta1.IUpdateEntryGroupRequest | null | undefined, {} | null | undefined>): void;
    updateEntryGroup(request: protos.google.cloud.datacatalog.v1beta1.IUpdateEntryGroupRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntryGroup, protos.google.cloud.datacatalog.v1beta1.IUpdateEntryGroupRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets an EntryGroup.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the entry group. For example,
     *   `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
     * @param {google.protobuf.FieldMask} request.readMask
     *   The fields to return. If not set or empty, all fields are returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.EntryGroup|EntryGroup}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.get_entry_group.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_GetEntryGroup_async
     */
    getEntryGroup(request?: protos.google.cloud.datacatalog.v1beta1.IGetEntryGroupRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.IEntryGroup,
        protos.google.cloud.datacatalog.v1beta1.IGetEntryGroupRequest | undefined,
        {} | undefined
    ]>;
    getEntryGroup(request: protos.google.cloud.datacatalog.v1beta1.IGetEntryGroupRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntryGroup, protos.google.cloud.datacatalog.v1beta1.IGetEntryGroupRequest | null | undefined, {} | null | undefined>): void;
    getEntryGroup(request: protos.google.cloud.datacatalog.v1beta1.IGetEntryGroupRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntryGroup, protos.google.cloud.datacatalog.v1beta1.IGetEntryGroupRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Deletes an EntryGroup. Only entry groups that do not contain entries can be
     * deleted. Users should enable the Data Catalog API in the project
     * identified by the `name` parameter (see [Data Catalog Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the entry group. For example,
     *   `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
     * @param {boolean} [request.force]
     *   Optional. If true, deletes all entries in the entry group.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.delete_entry_group.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_DeleteEntryGroup_async
     */
    deleteEntryGroup(request?: protos.google.cloud.datacatalog.v1beta1.IDeleteEntryGroupRequest, options?: CallOptions): Promise<[
        protos.google.protobuf.IEmpty,
        (protos.google.cloud.datacatalog.v1beta1.IDeleteEntryGroupRequest | undefined),
        {} | undefined
    ]>;
    deleteEntryGroup(request: protos.google.cloud.datacatalog.v1beta1.IDeleteEntryGroupRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteEntryGroupRequest | null | undefined, {} | null | undefined>): void;
    deleteEntryGroup(request: protos.google.cloud.datacatalog.v1beta1.IDeleteEntryGroupRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteEntryGroupRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Creates an entry. Only entries of 'FILESET' type or user-specified type can
     * be created.
     *
     * Users should enable the Data Catalog API in the project identified by
     * the `parent` parameter (see [Data Catalog Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * A maximum of 100,000 entries may be created per entry group.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the entry group this entry is in. Example:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
     *
     *   Note that this Entry and its child resources may not actually be stored in
     *   the location in this name.
     * @param {string} request.entryId
     *   Required. The id of the entry to create.
     * @param {google.cloud.datacatalog.v1beta1.Entry} request.entry
     *   Required. The entry to create.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.create_entry.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_CreateEntry_async
     */
    createEntry(request?: protos.google.cloud.datacatalog.v1beta1.ICreateEntryRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.IEntry,
        protos.google.cloud.datacatalog.v1beta1.ICreateEntryRequest | undefined,
        {} | undefined
    ]>;
    createEntry(request: protos.google.cloud.datacatalog.v1beta1.ICreateEntryRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntry, protos.google.cloud.datacatalog.v1beta1.ICreateEntryRequest | null | undefined, {} | null | undefined>): void;
    createEntry(request: protos.google.cloud.datacatalog.v1beta1.ICreateEntryRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntry, protos.google.cloud.datacatalog.v1beta1.ICreateEntryRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates an existing entry.
     * Users should enable the Data Catalog API in the project identified by
     * the `entry.name` parameter (see [Data Catalog Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.datacatalog.v1beta1.Entry} request.entry
     *   Required. The updated entry. The "name" field must be set.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Names of fields whose values to overwrite on an entry.
     *
     *   If this parameter is absent or empty, all modifiable fields
     *   are overwritten. If such fields are non-required and omitted in the
     *   request body, their values are emptied.
     *
     *   The following fields are modifiable:
     *
     *   * For entries with type `DATA_STREAM`:
     *      * `schema`
     *   * For entries with type `FILESET`:
     *      * `schema`
     *      * `display_name`
     *      * `description`
     *      * `gcs_fileset_spec`
     *      * `gcs_fileset_spec.file_patterns`
     *   * For entries with `user_specified_type`:
     *      * `schema`
     *      * `display_name`
     *      * `description`
     *      * `user_specified_type`
     *      * `user_specified_system`
     *      * `linked_resource`
     *      * `source_system_timestamps`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.update_entry.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_UpdateEntry_async
     */
    updateEntry(request?: protos.google.cloud.datacatalog.v1beta1.IUpdateEntryRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.IEntry,
        protos.google.cloud.datacatalog.v1beta1.IUpdateEntryRequest | undefined,
        {} | undefined
    ]>;
    updateEntry(request: protos.google.cloud.datacatalog.v1beta1.IUpdateEntryRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntry, protos.google.cloud.datacatalog.v1beta1.IUpdateEntryRequest | null | undefined, {} | null | undefined>): void;
    updateEntry(request: protos.google.cloud.datacatalog.v1beta1.IUpdateEntryRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntry, protos.google.cloud.datacatalog.v1beta1.IUpdateEntryRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Deletes an existing entry. Only entries created through
     * {@link protos.google.cloud.datacatalog.v1beta1.DataCatalog.CreateEntry|CreateEntry}
     * method can be deleted.
     * Users should enable the Data Catalog API in the project identified by
     * the `name` parameter (see [Data Catalog Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the entry. Example:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.delete_entry.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_DeleteEntry_async
     */
    deleteEntry(request?: protos.google.cloud.datacatalog.v1beta1.IDeleteEntryRequest, options?: CallOptions): Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.datacatalog.v1beta1.IDeleteEntryRequest | undefined,
        {} | undefined
    ]>;
    deleteEntry(request: protos.google.cloud.datacatalog.v1beta1.IDeleteEntryRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteEntryRequest | null | undefined, {} | null | undefined>): void;
    deleteEntry(request: protos.google.cloud.datacatalog.v1beta1.IDeleteEntryRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteEntryRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets an entry.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the entry. Example:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.get_entry.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_GetEntry_async
     */
    getEntry(request?: protos.google.cloud.datacatalog.v1beta1.IGetEntryRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.IEntry,
        protos.google.cloud.datacatalog.v1beta1.IGetEntryRequest | undefined,
        {} | undefined
    ]>;
    getEntry(request: protos.google.cloud.datacatalog.v1beta1.IGetEntryRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntry, protos.google.cloud.datacatalog.v1beta1.IGetEntryRequest | null | undefined, {} | null | undefined>): void;
    getEntry(request: protos.google.cloud.datacatalog.v1beta1.IGetEntryRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntry, protos.google.cloud.datacatalog.v1beta1.IGetEntryRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Get an entry by target resource name. This method allows clients to use
     * the resource name from the source Google Cloud Platform service to get the
     * Data Catalog Entry.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.linkedResource
     *   The full name of the Google Cloud Platform resource the Data Catalog
     *   entry represents. See:
     *   https://cloud.google.com/apis/design/resource_names#full_resource_name.
     *   Full names are case-sensitive.
     *
     *   Examples:
     *
     *    * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
     *    * //pubsub.googleapis.com/projects/projectId/topics/topicId
     * @param {string} request.sqlResource
     *   The SQL name of the entry. SQL names are case-sensitive.
     *
     *   Examples:
     *
     *     * `pubsub.project_id.topic_id`
     *     * ``pubsub.project_id.`topic.id.with.dots` ``
     *     * `bigquery.table.project_id.dataset_id.table_id`
     *     * `bigquery.dataset.project_id.dataset_id`
     *     * `datacatalog.entry.project_id.location_id.entry_group_id.entry_id`
     *
     *   `*_id`s should satisfy the standard SQL rules for identifiers.
     *   https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.lookup_entry.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_LookupEntry_async
     */
    lookupEntry(request?: protos.google.cloud.datacatalog.v1beta1.ILookupEntryRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.IEntry,
        protos.google.cloud.datacatalog.v1beta1.ILookupEntryRequest | undefined,
        {} | undefined
    ]>;
    lookupEntry(request: protos.google.cloud.datacatalog.v1beta1.ILookupEntryRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntry, protos.google.cloud.datacatalog.v1beta1.ILookupEntryRequest | null | undefined, {} | null | undefined>): void;
    lookupEntry(request: protos.google.cloud.datacatalog.v1beta1.ILookupEntryRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.IEntry, protos.google.cloud.datacatalog.v1beta1.ILookupEntryRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Creates a tag template. The user should enable the Data Catalog API in
     * the project identified by the `parent` parameter (see [Data Catalog
     * Resource
     * Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
     * for more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the project and the template location
     *   [region](https://cloud.google.com/data-catalog/docs/concepts/regions.
     *
     *   Example:
     *
     *   * projects/{project_id}/locations/us-central1
     * @param {string} request.tagTemplateId
     *   Required. The id of the tag template to create.
     * @param {google.cloud.datacatalog.v1beta1.TagTemplate} request.tagTemplate
     *   Required. The tag template to create.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.TagTemplate|TagTemplate}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.create_tag_template.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_CreateTagTemplate_async
     */
    createTagTemplate(request?: protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITagTemplate,
        (protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateRequest | undefined),
        {} | undefined
    ]>;
    createTagTemplate(request: protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplate, protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateRequest | null | undefined, {} | null | undefined>): void;
    createTagTemplate(request: protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplate, protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets a tag template.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the tag template. Example:
     *
     *   * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.TagTemplate|TagTemplate}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.get_tag_template.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_GetTagTemplate_async
     */
    getTagTemplate(request?: protos.google.cloud.datacatalog.v1beta1.IGetTagTemplateRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITagTemplate,
        (protos.google.cloud.datacatalog.v1beta1.IGetTagTemplateRequest | undefined),
        {} | undefined
    ]>;
    getTagTemplate(request: protos.google.cloud.datacatalog.v1beta1.IGetTagTemplateRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplate, protos.google.cloud.datacatalog.v1beta1.IGetTagTemplateRequest | null | undefined, {} | null | undefined>): void;
    getTagTemplate(request: protos.google.cloud.datacatalog.v1beta1.IGetTagTemplateRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplate, protos.google.cloud.datacatalog.v1beta1.IGetTagTemplateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates a tag template. This method cannot be used to update the fields of
     * a template. The tag template fields are represented as separate resources
     * and should be updated using their own create/update/delete methods.
     * Users should enable the Data Catalog API in the project identified by
     * the `tag_template.name` parameter (see [Data Catalog Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.datacatalog.v1beta1.TagTemplate} request.tagTemplate
     *   Required. The template to update. The "name" field must be set.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Names of fields whose values to overwrite on a tag template. Currently,
     *   only `display_name` can be overwritten.
     *
     *   In general, if this parameter is absent or empty, all modifiable fields
     *   are overwritten. If such fields are non-required and omitted in the
     *   request body, their values are emptied.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.TagTemplate|TagTemplate}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.update_tag_template.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_UpdateTagTemplate_async
     */
    updateTagTemplate(request?: protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITagTemplate,
        (protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateRequest | undefined),
        {} | undefined
    ]>;
    updateTagTemplate(request: protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplate, protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateRequest | null | undefined, {} | null | undefined>): void;
    updateTagTemplate(request: protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplate, protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Deletes a tag template and all tags using the template.
     * Users should enable the Data Catalog API in the project identified by
     * the `name` parameter (see [Data Catalog Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the tag template to delete. Example:
     *
     *   * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
     * @param {boolean} request.force
     *   Required. Currently, this field must always be set to `true`.
     *   This confirms the deletion of any possible tags using this template.
     *   `force = false` will be supported in the future.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.delete_tag_template.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_DeleteTagTemplate_async
     */
    deleteTagTemplate(request?: protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateRequest, options?: CallOptions): Promise<[
        protos.google.protobuf.IEmpty,
        (protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateRequest | undefined),
        {} | undefined
    ]>;
    deleteTagTemplate(request: protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateRequest | null | undefined, {} | null | undefined>): void;
    deleteTagTemplate(request: protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Creates a field in a tag template. The user should enable the Data Catalog
     * API in the project identified by the `parent` parameter (see
     * [Data Catalog Resource
     * Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
     * for more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the project and the template location
     *   [region](https://cloud.google.com/data-catalog/docs/concepts/regions).
     *
     *   Example:
     *
     *   * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}
     * @param {string} request.tagTemplateFieldId
     *   Required. The ID of the tag template field to create.
     *   Field ids can contain letters (both uppercase and lowercase), numbers
     *   (0-9), underscores (_) and dashes (-). Field IDs must be at least 1
     *   character long and at most 128 characters long. Field IDs must also be
     *   unique within their template.
     * @param {google.cloud.datacatalog.v1beta1.TagTemplateField} request.tagTemplateField
     *   Required. The tag template field to create.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.TagTemplateField|TagTemplateField}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.create_tag_template_field.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_CreateTagTemplateField_async
     */
    createTagTemplateField(request?: protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateFieldRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITagTemplateField,
        (protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateFieldRequest | undefined),
        {} | undefined
    ]>;
    createTagTemplateField(request: protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateFieldRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplateField, protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateFieldRequest | null | undefined, {} | null | undefined>): void;
    createTagTemplateField(request: protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateFieldRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplateField, protos.google.cloud.datacatalog.v1beta1.ICreateTagTemplateFieldRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates a field in a tag template. This method cannot be used to update the
     * field type. Users should enable the Data Catalog API in the project
     * identified by the `name` parameter (see [Data Catalog Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the tag template field. Example:
     *
     *   * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
     * @param {google.cloud.datacatalog.v1beta1.TagTemplateField} request.tagTemplateField
     *   Required. The template to update.
     * @param {google.protobuf.FieldMask} [request.updateMask]
     *   Optional. Names of fields whose values to overwrite on an individual field
     *   of a tag template. The following fields are modifiable:
     *
     *     * `display_name`
     *     * `type.enum_type`
     *     * `is_required`
     *
     *   If this parameter is absent or empty, all modifiable fields
     *   are overwritten. If such fields are non-required and omitted in the request
     *   body, their values are emptied with one exception: when updating an enum
     *   type, the provided values are merged with the existing values. Therefore,
     *   enum values can only be added, existing enum values cannot be deleted or
     *   renamed.
     *
     *   Additionally, updating a template field from optional to required is
     *   *not* allowed.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.TagTemplateField|TagTemplateField}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.update_tag_template_field.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_UpdateTagTemplateField_async
     */
    updateTagTemplateField(request?: protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateFieldRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITagTemplateField,
        (protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateFieldRequest | undefined),
        {} | undefined
    ]>;
    updateTagTemplateField(request: protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateFieldRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplateField, protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateFieldRequest | null | undefined, {} | null | undefined>): void;
    updateTagTemplateField(request: protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateFieldRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplateField, protos.google.cloud.datacatalog.v1beta1.IUpdateTagTemplateFieldRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Renames a field in a tag template. The user should enable the Data Catalog
     * API in the project identified by the `name` parameter (see [Data Catalog
     * Resource
     * Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project)
     * for more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the tag template. Example:
     *
     *   * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
     * @param {string} request.newTagTemplateFieldId
     *   Required. The new ID of this tag template field. For example,
     *   `my_new_field`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.TagTemplateField|TagTemplateField}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.rename_tag_template_field.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_RenameTagTemplateField_async
     */
    renameTagTemplateField(request?: protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITagTemplateField,
        (protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldRequest | undefined),
        {} | undefined
    ]>;
    renameTagTemplateField(request: protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplateField, protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldRequest | null | undefined, {} | null | undefined>): void;
    renameTagTemplateField(request: protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplateField, protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Renames an enum value in a tag template. The enum values have to be unique
     * within one enum field. Thus, an enum value cannot be renamed with a name
     * used in any other enum value within the same enum field.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the enum field value. Example:
     *
     *   * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}
     * @param {string} request.newEnumValueDisplayName
     *   Required. The new display name of the enum value. For example,
     *   `my_new_enum_value`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.TagTemplateField|TagTemplateField}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.rename_tag_template_field_enum_value.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_RenameTagTemplateFieldEnumValue_async
     */
    renameTagTemplateFieldEnumValue(request?: protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldEnumValueRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITagTemplateField,
        (protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldEnumValueRequest | undefined),
        {} | undefined
    ]>;
    renameTagTemplateFieldEnumValue(request: protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldEnumValueRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplateField, protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldEnumValueRequest | null | undefined, {} | null | undefined>): void;
    renameTagTemplateFieldEnumValue(request: protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldEnumValueRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITagTemplateField, protos.google.cloud.datacatalog.v1beta1.IRenameTagTemplateFieldEnumValueRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Deletes a field in a tag template and all uses of that field.
     * Users should enable the Data Catalog API in the project identified by
     * the `name` parameter (see [Data Catalog Resource Project]
     * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for
     * more information).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the tag template field to delete. Example:
     *
     *   * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
     * @param {boolean} request.force
     *   Required. Currently, this field must always be set to `true`.
     *   This confirms the deletion of this field from any tags using this field.
     *   `force = false` will be supported in the future.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.delete_tag_template_field.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_DeleteTagTemplateField_async
     */
    deleteTagTemplateField(request?: protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateFieldRequest, options?: CallOptions): Promise<[
        protos.google.protobuf.IEmpty,
        (protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateFieldRequest | undefined),
        {} | undefined
    ]>;
    deleteTagTemplateField(request: protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateFieldRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateFieldRequest | null | undefined, {} | null | undefined>): void;
    deleteTagTemplateField(request: protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateFieldRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteTagTemplateFieldRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Creates a tag on an {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry}.
     * Note: The project identified by the `parent` parameter for the
     * [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters)
     * and the
     * [tag
     * template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
     * used to create the tag must be from the same organization.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the resource to attach this tag to. Tags can be
     *   attached to Entries. Example:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
     *
     *   Note that this Tag and its child resources may not actually be stored in
     *   the location in this name.
     * @param {google.cloud.datacatalog.v1beta1.Tag} request.tag
     *   Required. The tag to create.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.Tag|Tag}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.create_tag.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_CreateTag_async
     */
    createTag(request?: protos.google.cloud.datacatalog.v1beta1.ICreateTagRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITag,
        protos.google.cloud.datacatalog.v1beta1.ICreateTagRequest | undefined,
        {} | undefined
    ]>;
    createTag(request: protos.google.cloud.datacatalog.v1beta1.ICreateTagRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITag, protos.google.cloud.datacatalog.v1beta1.ICreateTagRequest | null | undefined, {} | null | undefined>): void;
    createTag(request: protos.google.cloud.datacatalog.v1beta1.ICreateTagRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITag, protos.google.cloud.datacatalog.v1beta1.ICreateTagRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates an existing tag.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.datacatalog.v1beta1.Tag} request.tag
     *   Required. The updated tag. The "name" field must be set.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   Note: Currently, this parameter can only take `"fields"` as value.
     *
     *   Names of fields whose values to overwrite on a tag. Currently, a tag has
     *   the only modifiable field with the name `fields`.
     *
     *   In general, if this parameter is absent or empty, all modifiable fields
     *   are overwritten. If such fields are non-required and omitted in the
     *   request body, their values are emptied.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.datacatalog.v1beta1.Tag|Tag}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.update_tag.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_UpdateTag_async
     */
    updateTag(request?: protos.google.cloud.datacatalog.v1beta1.IUpdateTagRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITag,
        protos.google.cloud.datacatalog.v1beta1.IUpdateTagRequest | undefined,
        {} | undefined
    ]>;
    updateTag(request: protos.google.cloud.datacatalog.v1beta1.IUpdateTagRequest, options: CallOptions, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITag, protos.google.cloud.datacatalog.v1beta1.IUpdateTagRequest | null | undefined, {} | null | undefined>): void;
    updateTag(request: protos.google.cloud.datacatalog.v1beta1.IUpdateTagRequest, callback: Callback<protos.google.cloud.datacatalog.v1beta1.ITag, protos.google.cloud.datacatalog.v1beta1.IUpdateTagRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Deletes a tag.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the tag to delete. Example:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.delete_tag.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_DeleteTag_async
     */
    deleteTag(request?: protos.google.cloud.datacatalog.v1beta1.IDeleteTagRequest, options?: CallOptions): Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.datacatalog.v1beta1.IDeleteTagRequest | undefined,
        {} | undefined
    ]>;
    deleteTag(request: protos.google.cloud.datacatalog.v1beta1.IDeleteTagRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteTagRequest | null | undefined, {} | null | undefined>): void;
    deleteTag(request: protos.google.cloud.datacatalog.v1beta1.IDeleteTagRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.cloud.datacatalog.v1beta1.IDeleteTagRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Sets the access control policy for a resource. Replaces any existing
     * policy.
     * Supported resources are:
     *   - Tag templates.
     *   - Entries.
     *   - Entry groups.
     * Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
     * and any external Google Cloud Platform resources synced to Data Catalog.
     *
     * Callers must have following Google IAM permission
     *   - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
     *     templates.
     *   - `datacatalog.entries.setIamPolicy` to set policies on entries.
     *   - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.resource
     *   REQUIRED: The resource for which the policy is being specified.
     *   See the operation documentation for the appropriate value for this field.
     * @param {google.iam.v1.Policy} request.policy
     *   REQUIRED: The complete policy to be applied to the `resource`. The size of
     *   the policy is limited to a few 10s of KB. An empty policy is a
     *   valid policy but certain Cloud Platform services (such as Projects)
     *   might reject them.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
     *   the fields in the mask will be modified. If no mask is provided, the
     *   following default mask is used:
     *
     *   `paths: "bindings, etag"`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.iam.v1.Policy|Policy}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.set_iam_policy.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_SetIamPolicy_async
     */
    setIamPolicy(request?: protos.google.iam.v1.ISetIamPolicyRequest, options?: CallOptions): Promise<[
        protos.google.iam.v1.IPolicy,
        protos.google.iam.v1.ISetIamPolicyRequest | undefined,
        {} | undefined
    ]>;
    setIamPolicy(request: protos.google.iam.v1.ISetIamPolicyRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    setIamPolicy(request: protos.google.iam.v1.ISetIamPolicyRequest, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets the access control policy for a resource. A `NOT_FOUND` error
     * is returned if the resource does not exist. An empty policy is returned
     * if the resource exists but does not have a policy set on it.
     *
     * Supported resources are:
     *   - Tag templates.
     *   - Entries.
     *   - Entry groups.
     * Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
     * and any external Google Cloud Platform resources synced to Data Catalog.
     *
     * Callers must have following Google IAM permission
     *   - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
     *     templates.
     *   - `datacatalog.entries.getIamPolicy` to get policies on entries.
     *   - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.resource
     *   REQUIRED: The resource for which the policy is being requested.
     *   See the operation documentation for the appropriate value for this field.
     * @param {google.iam.v1.GetPolicyOptions} request.options
     *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
     *   `GetIamPolicy`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.iam.v1.Policy|Policy}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.get_iam_policy.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_GetIamPolicy_async
     */
    getIamPolicy(request?: protos.google.iam.v1.IGetIamPolicyRequest, options?: CallOptions): Promise<[
        protos.google.iam.v1.IPolicy,
        protos.google.iam.v1.IGetIamPolicyRequest | undefined,
        {} | undefined
    ]>;
    getIamPolicy(request: protos.google.iam.v1.IGetIamPolicyRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    getIamPolicy(request: protos.google.iam.v1.IGetIamPolicyRequest, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Returns the caller's permissions on a resource.
     * If the resource does not exist, an empty set of permissions is returned
     * (We don't return a `NOT_FOUND` error).
     *
     * Supported resources are:
     *   - Tag templates.
     *   - Entries.
     *   - Entry groups.
     * Note, this method cannot be used to manage policies for BigQuery, Pub/Sub
     * and any external Google Cloud Platform resources synced to Data Catalog.
     *
     * A caller is not required to have Google IAM permission to make this
     * request.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.resource
     *   REQUIRED: The resource for which the policy detail is being requested.
     *   See the operation documentation for the appropriate value for this field.
     * @param {string[]} request.permissions
     *   The set of permissions to check for the `resource`. Permissions with
     *   wildcards (such as '*' or 'storage.*') are not allowed. For more
     *   information see
     *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.iam.v1.TestIamPermissionsResponse|TestIamPermissionsResponse}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.test_iam_permissions.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_TestIamPermissions_async
     */
    testIamPermissions(request?: protos.google.iam.v1.ITestIamPermissionsRequest, options?: CallOptions): Promise<[
        protos.google.iam.v1.ITestIamPermissionsResponse,
        protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
        {} | undefined
    ]>;
    testIamPermissions(request: protos.google.iam.v1.ITestIamPermissionsRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined, {} | null | undefined>): void;
    testIamPermissions(request: protos.google.iam.v1.ITestIamPermissionsRequest, callback: Callback<protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Searches Data Catalog for multiple resources like entries, tags that
     * match a query.
     *
     * This is a custom method
     * (https://cloud.google.com/apis/design/custom_methods) and does not return
     * the complete resource, only the resource identifier and high level
     * fields. Clients can subsequently call `Get` methods.
     *
     * Note that Data Catalog search queries do not guarantee full recall. Query
     * results that match your query may not be returned, even in subsequent
     * result pages. Also note that results returned (and not returned) can vary
     * across repeated search queries.
     *
     * See [Data Catalog Search
     * Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
     * for more information.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.datacatalog.v1beta1.SearchCatalogRequest.Scope} request.scope
     *   Required. The scope of this search request. A `scope` that has empty
     *   `include_org_ids`, `include_project_ids` AND false
     *   `include_gcp_public_datasets` is considered invalid. Data Catalog will
     *   return an error in such a case.
     * @param {string} [request.query]
     *   Optional. The query string in search query syntax. An empty query string
     *   will result in all data assets (in the specified scope) that the user has
     *   access to. Query strings can be simple as "x" or more qualified as:
     *
     *   * name:x
     *   * column:x
     *   * description:y
     *
     *   Note: Query tokens need to have a minimum of 3 characters for substring
     *   matching to work correctly. See [Data Catalog Search
     *   Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
     *   for more information.
     * @param {number} request.pageSize
     *   Number of results in the search page. If <=0 then defaults to 10. Max limit
     *   for page_size is 1000. Throws an invalid argument for page_size > 1000.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token returned in an earlier
     *   {@link protos.google.cloud.datacatalog.v1beta1.SearchCatalogResponse.next_page_token|SearchCatalogResponse.next_page_token},
     *   which indicates that this is a continuation of a prior
     *   {@link protos.google.cloud.datacatalog.v1beta1.DataCatalog.SearchCatalog|SearchCatalogRequest}
     *   call, and that the system should return the next page of data. If empty,
     *   the first page is returned.
     * @param {string} request.orderBy
     *   Specifies the ordering of results, currently supported case-sensitive
     *   choices are:
     *
     *     * `relevance`, only supports descending
     *     * `last_modified_timestamp [asc|desc]`, defaults to descending if not
     *       specified
     *     * `default` that can only be descending
     *
     *   If not specified, defaults to `relevance` descending.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.datacatalog.v1beta1.SearchCatalogResult|SearchCatalogResult}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `searchCatalogAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    searchCatalog(request?: protos.google.cloud.datacatalog.v1beta1.ISearchCatalogRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ISearchCatalogResult[],
        protos.google.cloud.datacatalog.v1beta1.ISearchCatalogRequest | null,
        protos.google.cloud.datacatalog.v1beta1.ISearchCatalogResponse
    ]>;
    searchCatalog(request: protos.google.cloud.datacatalog.v1beta1.ISearchCatalogRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.datacatalog.v1beta1.ISearchCatalogRequest, protos.google.cloud.datacatalog.v1beta1.ISearchCatalogResponse | null | undefined, protos.google.cloud.datacatalog.v1beta1.ISearchCatalogResult>): void;
    searchCatalog(request: protos.google.cloud.datacatalog.v1beta1.ISearchCatalogRequest, callback: PaginationCallback<protos.google.cloud.datacatalog.v1beta1.ISearchCatalogRequest, protos.google.cloud.datacatalog.v1beta1.ISearchCatalogResponse | null | undefined, protos.google.cloud.datacatalog.v1beta1.ISearchCatalogResult>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.datacatalog.v1beta1.SearchCatalogRequest.Scope} request.scope
     *   Required. The scope of this search request. A `scope` that has empty
     *   `include_org_ids`, `include_project_ids` AND false
     *   `include_gcp_public_datasets` is considered invalid. Data Catalog will
     *   return an error in such a case.
     * @param {string} [request.query]
     *   Optional. The query string in search query syntax. An empty query string
     *   will result in all data assets (in the specified scope) that the user has
     *   access to. Query strings can be simple as "x" or more qualified as:
     *
     *   * name:x
     *   * column:x
     *   * description:y
     *
     *   Note: Query tokens need to have a minimum of 3 characters for substring
     *   matching to work correctly. See [Data Catalog Search
     *   Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
     *   for more information.
     * @param {number} request.pageSize
     *   Number of results in the search page. If <=0 then defaults to 10. Max limit
     *   for page_size is 1000. Throws an invalid argument for page_size > 1000.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token returned in an earlier
     *   {@link protos.google.cloud.datacatalog.v1beta1.SearchCatalogResponse.next_page_token|SearchCatalogResponse.next_page_token},
     *   which indicates that this is a continuation of a prior
     *   {@link protos.google.cloud.datacatalog.v1beta1.DataCatalog.SearchCatalog|SearchCatalogRequest}
     *   call, and that the system should return the next page of data. If empty,
     *   the first page is returned.
     * @param {string} request.orderBy
     *   Specifies the ordering of results, currently supported case-sensitive
     *   choices are:
     *
     *     * `relevance`, only supports descending
     *     * `last_modified_timestamp [asc|desc]`, defaults to descending if not
     *       specified
     *     * `default` that can only be descending
     *
     *   If not specified, defaults to `relevance` descending.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.datacatalog.v1beta1.SearchCatalogResult|SearchCatalogResult} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `searchCatalogAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    searchCatalogStream(request?: protos.google.cloud.datacatalog.v1beta1.ISearchCatalogRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `searchCatalog`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.datacatalog.v1beta1.SearchCatalogRequest.Scope} request.scope
     *   Required. The scope of this search request. A `scope` that has empty
     *   `include_org_ids`, `include_project_ids` AND false
     *   `include_gcp_public_datasets` is considered invalid. Data Catalog will
     *   return an error in such a case.
     * @param {string} [request.query]
     *   Optional. The query string in search query syntax. An empty query string
     *   will result in all data assets (in the specified scope) that the user has
     *   access to. Query strings can be simple as "x" or more qualified as:
     *
     *   * name:x
     *   * column:x
     *   * description:y
     *
     *   Note: Query tokens need to have a minimum of 3 characters for substring
     *   matching to work correctly. See [Data Catalog Search
     *   Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference)
     *   for more information.
     * @param {number} request.pageSize
     *   Number of results in the search page. If <=0 then defaults to 10. Max limit
     *   for page_size is 1000. Throws an invalid argument for page_size > 1000.
     * @param {string} [request.pageToken]
     *   Optional. Pagination token returned in an earlier
     *   {@link protos.google.cloud.datacatalog.v1beta1.SearchCatalogResponse.next_page_token|SearchCatalogResponse.next_page_token},
     *   which indicates that this is a continuation of a prior
     *   {@link protos.google.cloud.datacatalog.v1beta1.DataCatalog.SearchCatalog|SearchCatalogRequest}
     *   call, and that the system should return the next page of data. If empty,
     *   the first page is returned.
     * @param {string} request.orderBy
     *   Specifies the ordering of results, currently supported case-sensitive
     *   choices are:
     *
     *     * `relevance`, only supports descending
     *     * `last_modified_timestamp [asc|desc]`, defaults to descending if not
     *       specified
     *     * `default` that can only be descending
     *
     *   If not specified, defaults to `relevance` descending.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.datacatalog.v1beta1.SearchCatalogResult|SearchCatalogResult}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.search_catalog.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_SearchCatalog_async
     */
    searchCatalogAsync(request?: protos.google.cloud.datacatalog.v1beta1.ISearchCatalogRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.datacatalog.v1beta1.ISearchCatalogResult>;
    /**
     * Lists entry groups.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the location that contains the entry groups, which
     *   can be provided in URL format. Example:
     *
     *   * projects/{project_id}/locations/{location}
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of items to return. Default is 10. Max limit
     *   is 1000. Throws an invalid argument for `page_size > 1000`.
     * @param {string} [request.pageToken]
     *   Optional. Token that specifies which page is requested. If empty, the first
     *   page is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.datacatalog.v1beta1.EntryGroup|EntryGroup}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listEntryGroupsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listEntryGroups(request?: protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.IEntryGroup[],
        protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsRequest | null,
        protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsResponse
    ]>;
    listEntryGroups(request: protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsRequest, protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsResponse | null | undefined, protos.google.cloud.datacatalog.v1beta1.IEntryGroup>): void;
    listEntryGroups(request: protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsRequest, callback: PaginationCallback<protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsRequest, protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsResponse | null | undefined, protos.google.cloud.datacatalog.v1beta1.IEntryGroup>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the location that contains the entry groups, which
     *   can be provided in URL format. Example:
     *
     *   * projects/{project_id}/locations/{location}
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of items to return. Default is 10. Max limit
     *   is 1000. Throws an invalid argument for `page_size > 1000`.
     * @param {string} [request.pageToken]
     *   Optional. Token that specifies which page is requested. If empty, the first
     *   page is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.datacatalog.v1beta1.EntryGroup|EntryGroup} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listEntryGroupsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listEntryGroupsStream(request?: protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listEntryGroups`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the location that contains the entry groups, which
     *   can be provided in URL format. Example:
     *
     *   * projects/{project_id}/locations/{location}
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of items to return. Default is 10. Max limit
     *   is 1000. Throws an invalid argument for `page_size > 1000`.
     * @param {string} [request.pageToken]
     *   Optional. Token that specifies which page is requested. If empty, the first
     *   page is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.datacatalog.v1beta1.EntryGroup|EntryGroup}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.list_entry_groups.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_ListEntryGroups_async
     */
    listEntryGroupsAsync(request?: protos.google.cloud.datacatalog.v1beta1.IListEntryGroupsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.datacatalog.v1beta1.IEntryGroup>;
    /**
     * Lists entries.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the entry group that contains the entries, which can
     *   be provided in URL format. Example:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
     * @param {number} request.pageSize
     *   The maximum number of items to return. Default is 10. Max limit is 1000.
     *   Throws an invalid argument for `page_size > 1000`.
     * @param {string} request.pageToken
     *   Token that specifies which page is requested. If empty, the first page is
     *   returned.
     * @param {google.protobuf.FieldMask} request.readMask
     *   The fields to return for each Entry. If not set or empty, all
     *   fields are returned.
     *   For example, setting read_mask to contain only one path "name" will cause
     *   ListEntries to return a list of Entries with only "name" field.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listEntriesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listEntries(request?: protos.google.cloud.datacatalog.v1beta1.IListEntriesRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.IEntry[],
        protos.google.cloud.datacatalog.v1beta1.IListEntriesRequest | null,
        protos.google.cloud.datacatalog.v1beta1.IListEntriesResponse
    ]>;
    listEntries(request: protos.google.cloud.datacatalog.v1beta1.IListEntriesRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.datacatalog.v1beta1.IListEntriesRequest, protos.google.cloud.datacatalog.v1beta1.IListEntriesResponse | null | undefined, protos.google.cloud.datacatalog.v1beta1.IEntry>): void;
    listEntries(request: protos.google.cloud.datacatalog.v1beta1.IListEntriesRequest, callback: PaginationCallback<protos.google.cloud.datacatalog.v1beta1.IListEntriesRequest, protos.google.cloud.datacatalog.v1beta1.IListEntriesResponse | null | undefined, protos.google.cloud.datacatalog.v1beta1.IEntry>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the entry group that contains the entries, which can
     *   be provided in URL format. Example:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
     * @param {number} request.pageSize
     *   The maximum number of items to return. Default is 10. Max limit is 1000.
     *   Throws an invalid argument for `page_size > 1000`.
     * @param {string} request.pageToken
     *   Token that specifies which page is requested. If empty, the first page is
     *   returned.
     * @param {google.protobuf.FieldMask} request.readMask
     *   The fields to return for each Entry. If not set or empty, all
     *   fields are returned.
     *   For example, setting read_mask to contain only one path "name" will cause
     *   ListEntries to return a list of Entries with only "name" field.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listEntriesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listEntriesStream(request?: protos.google.cloud.datacatalog.v1beta1.IListEntriesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listEntries`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the entry group that contains the entries, which can
     *   be provided in URL format. Example:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
     * @param {number} request.pageSize
     *   The maximum number of items to return. Default is 10. Max limit is 1000.
     *   Throws an invalid argument for `page_size > 1000`.
     * @param {string} request.pageToken
     *   Token that specifies which page is requested. If empty, the first page is
     *   returned.
     * @param {google.protobuf.FieldMask} request.readMask
     *   The fields to return for each Entry. If not set or empty, all
     *   fields are returned.
     *   For example, setting read_mask to contain only one path "name" will cause
     *   ListEntries to return a list of Entries with only "name" field.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.list_entries.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_ListEntries_async
     */
    listEntriesAsync(request?: protos.google.cloud.datacatalog.v1beta1.IListEntriesRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.datacatalog.v1beta1.IEntry>;
    /**
     * Lists tags assigned to an {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry}.
     * The {@link protos.google.cloud.datacatalog.v1beta1.Tag.column|columns} in the response
     * are lowercased.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the Data Catalog resource to list the tags of. The
     *   resource could be an {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry} or an
     *   {@link protos.google.cloud.datacatalog.v1beta1.EntryGroup|EntryGroup}.
     *
     *   Examples:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
     * @param {number} request.pageSize
     *   The maximum number of tags to return. Default is 10. Max limit is 1000.
     * @param {string} request.pageToken
     *   Token that specifies which page is requested. If empty, the first page is
     *   returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.datacatalog.v1beta1.Tag|Tag}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listTagsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listTags(request?: protos.google.cloud.datacatalog.v1beta1.IListTagsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.datacatalog.v1beta1.ITag[],
        protos.google.cloud.datacatalog.v1beta1.IListTagsRequest | null,
        protos.google.cloud.datacatalog.v1beta1.IListTagsResponse
    ]>;
    listTags(request: protos.google.cloud.datacatalog.v1beta1.IListTagsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.datacatalog.v1beta1.IListTagsRequest, protos.google.cloud.datacatalog.v1beta1.IListTagsResponse | null | undefined, protos.google.cloud.datacatalog.v1beta1.ITag>): void;
    listTags(request: protos.google.cloud.datacatalog.v1beta1.IListTagsRequest, callback: PaginationCallback<protos.google.cloud.datacatalog.v1beta1.IListTagsRequest, protos.google.cloud.datacatalog.v1beta1.IListTagsResponse | null | undefined, protos.google.cloud.datacatalog.v1beta1.ITag>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the Data Catalog resource to list the tags of. The
     *   resource could be an {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry} or an
     *   {@link protos.google.cloud.datacatalog.v1beta1.EntryGroup|EntryGroup}.
     *
     *   Examples:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
     * @param {number} request.pageSize
     *   The maximum number of tags to return. Default is 10. Max limit is 1000.
     * @param {string} request.pageToken
     *   Token that specifies which page is requested. If empty, the first page is
     *   returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.datacatalog.v1beta1.Tag|Tag} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listTagsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listTagsStream(request?: protos.google.cloud.datacatalog.v1beta1.IListTagsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listTags`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The name of the Data Catalog resource to list the tags of. The
     *   resource could be an {@link protos.google.cloud.datacatalog.v1beta1.Entry|Entry} or an
     *   {@link protos.google.cloud.datacatalog.v1beta1.EntryGroup|EntryGroup}.
     *
     *   Examples:
     *
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
     *   * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
     * @param {number} request.pageSize
     *   The maximum number of tags to return. Default is 10. Max limit is 1000.
     * @param {string} request.pageToken
     *   Token that specifies which page is requested. If empty, the first page is
     *   returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.datacatalog.v1beta1.Tag|Tag}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1beta1/data_catalog.list_tags.js</caption>
     * region_tag:datacatalog_v1beta1_generated_DataCatalog_ListTags_async
     */
    listTagsAsync(request?: protos.google.cloud.datacatalog.v1beta1.IListTagsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.datacatalog.v1beta1.ITag>;
    /**
     * Return a fully-qualified entry resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} entry_group
     * @param {string} entry
     * @returns {string} Resource name string.
     */
    entryPath(project: string, location: string, entryGroup: string, entry: string): string;
    /**
     * Parse the project from Entry resource.
     *
     * @param {string} entryName
     *   A fully-qualified path representing Entry resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromEntryName(entryName: string): string | number;
    /**
     * Parse the location from Entry resource.
     *
     * @param {string} entryName
     *   A fully-qualified path representing Entry resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromEntryName(entryName: string): string | number;
    /**
     * Parse the entry_group from Entry resource.
     *
     * @param {string} entryName
     *   A fully-qualified path representing Entry resource.
     * @returns {string} A string representing the entry_group.
     */
    matchEntryGroupFromEntryName(entryName: string): string | number;
    /**
     * Parse the entry from Entry resource.
     *
     * @param {string} entryName
     *   A fully-qualified path representing Entry resource.
     * @returns {string} A string representing the entry.
     */
    matchEntryFromEntryName(entryName: string): string | number;
    /**
     * Return a fully-qualified entryGroup resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} entry_group
     * @returns {string} Resource name string.
     */
    entryGroupPath(project: string, location: string, entryGroup: string): string;
    /**
     * Parse the project from EntryGroup resource.
     *
     * @param {string} entryGroupName
     *   A fully-qualified path representing EntryGroup resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromEntryGroupName(entryGroupName: string): string | number;
    /**
     * Parse the location from EntryGroup resource.
     *
     * @param {string} entryGroupName
     *   A fully-qualified path representing EntryGroup resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromEntryGroupName(entryGroupName: string): string | number;
    /**
     * Parse the entry_group from EntryGroup resource.
     *
     * @param {string} entryGroupName
     *   A fully-qualified path representing EntryGroup resource.
     * @returns {string} A string representing the entry_group.
     */
    matchEntryGroupFromEntryGroupName(entryGroupName: string): string | number;
    /**
     * Return a fully-qualified location resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @returns {string} Resource name string.
     */
    locationPath(project: string, location: string): string;
    /**
     * Parse the project from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromLocationName(locationName: string): string | number;
    /**
     * Parse the location from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromLocationName(locationName: string): string | number;
    /**
     * Return a fully-qualified policyTag resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} taxonomy
     * @param {string} policy_tag
     * @returns {string} Resource name string.
     */
    policyTagPath(project: string, location: string, taxonomy: string, policyTag: string): string;
    /**
     * Parse the project from PolicyTag resource.
     *
     * @param {string} policyTagName
     *   A fully-qualified path representing PolicyTag resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromPolicyTagName(policyTagName: string): string | number;
    /**
     * Parse the location from PolicyTag resource.
     *
     * @param {string} policyTagName
     *   A fully-qualified path representing PolicyTag resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromPolicyTagName(policyTagName: string): string | number;
    /**
     * Parse the taxonomy from PolicyTag resource.
     *
     * @param {string} policyTagName
     *   A fully-qualified path representing PolicyTag resource.
     * @returns {string} A string representing the taxonomy.
     */
    matchTaxonomyFromPolicyTagName(policyTagName: string): string | number;
    /**
     * Parse the policy_tag from PolicyTag resource.
     *
     * @param {string} policyTagName
     *   A fully-qualified path representing PolicyTag resource.
     * @returns {string} A string representing the policy_tag.
     */
    matchPolicyTagFromPolicyTagName(policyTagName: string): string | number;
    /**
     * Return a fully-qualified project resource name string.
     *
     * @param {string} project
     * @returns {string} Resource name string.
     */
    projectPath(project: string): string;
    /**
     * Parse the project from Project resource.
     *
     * @param {string} projectName
     *   A fully-qualified path representing Project resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectName(projectName: string): string | number;
    /**
     * Return a fully-qualified tag resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} entry_group
     * @param {string} entry
     * @param {string} tag
     * @returns {string} Resource name string.
     */
    tagPath(project: string, location: string, entryGroup: string, entry: string, tag: string): string;
    /**
     * Parse the project from Tag resource.
     *
     * @param {string} tagName
     *   A fully-qualified path representing Tag resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromTagName(tagName: string): string | number;
    /**
     * Parse the location from Tag resource.
     *
     * @param {string} tagName
     *   A fully-qualified path representing Tag resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromTagName(tagName: string): string | number;
    /**
     * Parse the entry_group from Tag resource.
     *
     * @param {string} tagName
     *   A fully-qualified path representing Tag resource.
     * @returns {string} A string representing the entry_group.
     */
    matchEntryGroupFromTagName(tagName: string): string | number;
    /**
     * Parse the entry from Tag resource.
     *
     * @param {string} tagName
     *   A fully-qualified path representing Tag resource.
     * @returns {string} A string representing the entry.
     */
    matchEntryFromTagName(tagName: string): string | number;
    /**
     * Parse the tag from Tag resource.
     *
     * @param {string} tagName
     *   A fully-qualified path representing Tag resource.
     * @returns {string} A string representing the tag.
     */
    matchTagFromTagName(tagName: string): string | number;
    /**
     * Return a fully-qualified tagTemplate resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} tag_template
     * @returns {string} Resource name string.
     */
    tagTemplatePath(project: string, location: string, tagTemplate: string): string;
    /**
     * Parse the project from TagTemplate resource.
     *
     * @param {string} tagTemplateName
     *   A fully-qualified path representing TagTemplate resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromTagTemplateName(tagTemplateName: string): string | number;
    /**
     * Parse the location from TagTemplate resource.
     *
     * @param {string} tagTemplateName
     *   A fully-qualified path representing TagTemplate resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromTagTemplateName(tagTemplateName: string): string | number;
    /**
     * Parse the tag_template from TagTemplate resource.
     *
     * @param {string} tagTemplateName
     *   A fully-qualified path representing TagTemplate resource.
     * @returns {string} A string representing the tag_template.
     */
    matchTagTemplateFromTagTemplateName(tagTemplateName: string): string | number;
    /**
     * Return a fully-qualified tagTemplateField resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} tag_template
     * @param {string} field
     * @returns {string} Resource name string.
     */
    tagTemplateFieldPath(project: string, location: string, tagTemplate: string, field: string): string;
    /**
     * Parse the project from TagTemplateField resource.
     *
     * @param {string} tagTemplateFieldName
     *   A fully-qualified path representing TagTemplateField resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromTagTemplateFieldName(tagTemplateFieldName: string): string | number;
    /**
     * Parse the location from TagTemplateField resource.
     *
     * @param {string} tagTemplateFieldName
     *   A fully-qualified path representing TagTemplateField resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromTagTemplateFieldName(tagTemplateFieldName: string): string | number;
    /**
     * Parse the tag_template from TagTemplateField resource.
     *
     * @param {string} tagTemplateFieldName
     *   A fully-qualified path representing TagTemplateField resource.
     * @returns {string} A string representing the tag_template.
     */
    matchTagTemplateFromTagTemplateFieldName(tagTemplateFieldName: string): string | number;
    /**
     * Parse the field from TagTemplateField resource.
     *
     * @param {string} tagTemplateFieldName
     *   A fully-qualified path representing TagTemplateField resource.
     * @returns {string} A string representing the field.
     */
    matchFieldFromTagTemplateFieldName(tagTemplateFieldName: string): string | number;
    /**
     * Return a fully-qualified tagTemplateFieldEnumValue resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} tag_template
     * @param {string} tag_template_field_id
     * @param {string} enum_value_display_name
     * @returns {string} Resource name string.
     */
    tagTemplateFieldEnumValuePath(project: string, location: string, tagTemplate: string, tagTemplateFieldId: string, enumValueDisplayName: string): string;
    /**
     * Parse the project from TagTemplateFieldEnumValue resource.
     *
     * @param {string} tagTemplateFieldEnumValueName
     *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromTagTemplateFieldEnumValueName(tagTemplateFieldEnumValueName: string): string | number;
    /**
     * Parse the location from TagTemplateFieldEnumValue resource.
     *
     * @param {string} tagTemplateFieldEnumValueName
     *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromTagTemplateFieldEnumValueName(tagTemplateFieldEnumValueName: string): string | number;
    /**
     * Parse the tag_template from TagTemplateFieldEnumValue resource.
     *
     * @param {string} tagTemplateFieldEnumValueName
     *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
     * @returns {string} A string representing the tag_template.
     */
    matchTagTemplateFromTagTemplateFieldEnumValueName(tagTemplateFieldEnumValueName: string): string | number;
    /**
     * Parse the tag_template_field_id from TagTemplateFieldEnumValue resource.
     *
     * @param {string} tagTemplateFieldEnumValueName
     *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
     * @returns {string} A string representing the tag_template_field_id.
     */
    matchTagTemplateFieldIdFromTagTemplateFieldEnumValueName(tagTemplateFieldEnumValueName: string): string | number;
    /**
     * Parse the enum_value_display_name from TagTemplateFieldEnumValue resource.
     *
     * @param {string} tagTemplateFieldEnumValueName
     *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
     * @returns {string} A string representing the enum_value_display_name.
     */
    matchEnumValueDisplayNameFromTagTemplateFieldEnumValueName(tagTemplateFieldEnumValueName: string): string | number;
    /**
     * Return a fully-qualified taxonomy resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} taxonomy
     * @returns {string} Resource name string.
     */
    taxonomyPath(project: string, location: string, taxonomy: string): string;
    /**
     * Parse the project from Taxonomy resource.
     *
     * @param {string} taxonomyName
     *   A fully-qualified path representing Taxonomy resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromTaxonomyName(taxonomyName: string): string | number;
    /**
     * Parse the location from Taxonomy resource.
     *
     * @param {string} taxonomyName
     *   A fully-qualified path representing Taxonomy resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromTaxonomyName(taxonomyName: string): string | number;
    /**
     * Parse the taxonomy from Taxonomy resource.
     *
     * @param {string} taxonomyName
     *   A fully-qualified path representing Taxonomy resource.
     * @returns {string} A string representing the taxonomy.
     */
    matchTaxonomyFromTaxonomyName(taxonomyName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
